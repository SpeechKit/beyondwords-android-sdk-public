apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'

android {
    compileSdkVersion rootProject.property("android_build_compileSdkVersion") as int

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    defaultConfig {
        minSdkVersion rootProject.property("android_build_minSdkVersion") as int
        targetSdkVersion rootProject.property("android_build_targetSdkVersion") as int

        applicationId "io.beyondwords.player.demo"

        versionCode 1
        versionName "1.0"

        vectorDrawables.useSupportLibrary true

        buildConfigField "String", "LIB_VERSION", "\"$beyondwwords_version\""
    }

    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/LICENSE'
        exclude '.readme'
        exclude '**/*.java'
    }

    buildTypes {
        release {
            debuggable false
            minifyEnabled true
            shrinkResources true
            shrinkResources false

            proguardFiles = [
                "proguard-rules.txt",
                getDefaultProguardFile('proguard-android.txt')
            ]
        }
        debug {
            jniDebuggable = true
        }
    }

    lintOptions {
        // The demo app isn't indexed, doesn't have translations, and has a
        // banner for AndroidTV that's only in xhdpi density.
        disable 'GoogleAppIndexingWarning','MissingTranslation','IconDensities'
    }

    splits {
        abi {
            // Enables ABI APK splits.
            enable true

            // By default all ABIs are included, so use reset() and include to specify that we only
            // want APKs for x86, armeabi-v7a, and mips.

            // Resets the list of ABIs that Gradle should create APKs for to none.
            reset()

            // Specifies a list of ABIs that Gradle should create APKs for.

            include 'armeabi-v7a', 'x86', 'x86_64', 'arm64-v8a'

            // Specifies that we do not want to also generate a universal APK that includes all ABIs.
            universalApk true
        }
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "androidx.annotation:annotation:$androidx_annotation_version"
    implementation "androidx.legacy:legacy-support-core-ui:$androidx_legacy_support_core_ui_version"
    implementation "androidx.fragment:fragment-ktx:$androidx_fragment_version"
    implementation "androidx.constraintlayout:constraintlayout:$androidx_constraintlayout_version"
    implementation "com.google.android.material:material:$google_material_version"
    implementation "io.speechkit.android:player:$beyondwwords_version"
}
